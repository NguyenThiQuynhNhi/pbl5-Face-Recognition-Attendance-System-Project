import express from 'express'; 
import sql from 'mssql';
import cors from 'cors';

const app = express();
app.use(express.json());
app.use(cors());

const config = {
    user: 'sa', 
    password: '123', 
    server: 'localhost\\SQLEXPRESS02', 
    database: 'QuanLyChamCong',
    options: {
        encrypt: false, 
        trustServerCertificate: true
    }
};

const connectDB = async () => {
    try {
        await sql.connect(config);
        console.log("âœ… Káº¿t ná»‘i SQL Server thÃ nh cÃ´ng!");
    } catch (err) {
        console.error("â›” Lá»—i káº¿t ná»‘i SQL Server:", err);
    }
};
connectDB();

app.get('/players', async (req, res) => {
    try {
        const result = await sql.query("SELECT MaCauThu, TenCauThu, HinhAnh FROM CauThu");
        if (result.recordset.length === 0) {
            return res.status(404).json({ message: "â›” KhÃ´ng cÃ³ cáº§u thá»§ nÃ o." });
        }
        res.json(result.recordset);
    } catch (err) {
        console.error("â›” Lá»—i truy váº¥n SQL:", err);
        res.status(500).json({ message: "Lá»—i khi láº¥y danh sÃ¡ch cáº§u thá»§." });
    }
});

app.post('/players', async (req, res) => {
    const { name, image } = req.body;
    if (!name || !image) return res.status(400).json({ message: "â›” Thiáº¿u dá»¯ liá»‡u cáº§u thá»§." });

    try {
        const request = new sql.Request();
        request.input("TenCauThu", sql.NVarChar, name);
        request.input("HinhAnh", sql.NVarChar, image);
        await request.query("INSERT INTO CauThu (TenCauThu, HinhAnh) VALUES (@TenCauThu, @HinhAnh)");
        res.status(201).json({ message: "âœ… Cáº§u thá»§ Ä‘Ã£ Ä‘Æ°á»£c thÃªm!" });
    } catch (err) {
        console.error("â›” Lá»—i thÃªm cáº§u thá»§:", err);
        res.status(500).json({ message: "Lá»—i khi thÃªm cáº§u thá»§." });
    }
});

app.put('/players/:id', async (req, res) => {
    const { id } = req.params;
    const { name, image } = req.body;
    if (!name || !image) return res.status(400).json({ message: "â›” Thiáº¿u dá»¯ liá»‡u cáº­p nháº­t." });

    try {
        const request = new sql.Request();
        request.input("id", sql.Int, id);
        request.input("TenCauThu", sql.NVarChar, name);
        request.input("HinhAnh", sql.NVarChar, image);
        const result = await request.query("UPDATE CauThu SET TenCauThu=@TenCauThu, HinhAnh=@HinhAnh WHERE MaCauThu=@id");

        if (result.rowsAffected[0] === 0) {
            return res.status(404).json({ message: "â›” KhÃ´ng tÃ¬m tháº¥y cáº§u thá»§ Ä‘á»ƒ cáº­p nháº­t." });
        }
        res.json({ message: "âœ… Cáº§u thá»§ Ä‘Ã£ Ä‘Æ°á»£c cáº­p nháº­t!" });
    } catch (err) {
        console.error("â›” Lá»—i cáº­p nháº­t cáº§u thá»§:", err);
        res.status(500).json({ message: "Lá»—i khi cáº­p nháº­t cáº§u thá»§." });
    }
});

app.delete('/players/:id', async (req, res) => {
    const { id } = req.params;
    try {
        const request = new sql.Request();
        request.input("id", sql.Int, id);
        const result = await request.query("DELETE FROM CauThu WHERE MaCauThu=@id");

        if (result.rowsAffected[0] === 0) {
            return res.status(404).json({ message: "â›” KhÃ´ng tÃ¬m tháº¥y cáº§u thá»§ Ä‘á»ƒ xÃ³a." });
        }
        res.json({ message: "âœ… Cáº§u thá»§ Ä‘Ã£ bá»‹ xÃ³a!" });
    } catch (err) {
        console.error("â›” Lá»—i xÃ³a cáº§u thá»§:", err);
        res.status(500).json({ message: "Lá»—i khi xÃ³a cáº§u thá»§." });
    }
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`ðŸš€ Server cháº¡y táº¡i: http://localhost:${PORT}`));
